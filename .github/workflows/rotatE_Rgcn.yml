name: Run RotatE and R-GCN Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        # Installer PyTorch
        pip install torch==2.0.0+cpu
        
        # Installer PyTorch Geometric et ses dépendances compatibles
        pip install torch-geometric -f https://data.pyg.org/whl/torch-2.0.0+cpu.html
        
        # Installer les autres dépendances
        pip install py2neo pandas sentence-transformers fuzzywuzzy

        # Installer les extensions PyTorch (torch-scatter, torch-cluster, etc.)
        pip install torch-scatter==2.1.0+cpu
        pip install torch-sparse==2.0.6+cpu
        pip install torch-cluster==1.6.1+cpu
        pip install torch-spline-conv==1.2.1+cpu

    - name: Test Python installation and dependencies
      run: |
        python -c "import torch; print(torch.__version__)"
        python -c "import torch_geometric; print(torch_geometric.__version__)"
        python -c "import torch_scatter; print(torch_scatter.__version__)"
        python -c "import torch_cluster; print(torch_cluster.__version__)"

    - name: Run RotatE and R-GCN Pipeline
      run: |
        # Exécuter le script Python principal
        python cskg/rotatE_Rgcn.py

    - name: Upload results as artifacts (optional)
      uses: actions/upload-artifact@v2
      with:
        name: rotatE_rgcn_results
        path: results/  # Spécifie le répertoire où tes résultats sont enregistrés

    - name: Cache dependencies (optional)
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

      # Etape 7: Exécuter le script rotatE_Rgcn.py
    - name: Run rotatE_Rgcn
      run: python rotatE_Rgcn.py

    
